# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import administracion_pb2 as administracion__pb2


class AdministracionStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.registrar_vendedor = channel.unary_unary(
                '/vendedores.Administracion/registrar_vendedor',
                request_serializer=administracion__pb2.RegistroVendedor.SerializeToString,
                response_deserializer=administracion__pb2.Status.FromString,
                )
        self.registrar_tienda = channel.unary_unary(
                '/vendedores.Administracion/registrar_tienda',
                request_serializer=administracion__pb2.RegistroTienda.SerializeToString,
                response_deserializer=administracion__pb2.Status.FromString,
                )
        self.asignar_a_tienda = channel.unary_unary(
                '/vendedores.Administracion/asignar_a_tienda',
                request_serializer=administracion__pb2.RegistroAsignacion.SerializeToString,
                response_deserializer=administracion__pb2.Status.FromString,
                )
        self.listado_tiendas = channel.unary_stream(
                '/vendedores.Administracion/listado_tiendas',
                request_serializer=administracion__pb2.Empty.SerializeToString,
                response_deserializer=administracion__pb2.RegistroTienda.FromString,
                )
        self.listado_vendedores = channel.unary_stream(
                '/vendedores.Administracion/listado_vendedores',
                request_serializer=administracion__pb2.Empty.SerializeToString,
                response_deserializer=administracion__pb2.RegistroVendedor.FromString,
                )
        self.listado_asignaciones = channel.unary_unary(
                '/vendedores.Administracion/listado_asignaciones',
                request_serializer=administracion__pb2.Empty.SerializeToString,
                response_deserializer=administracion__pb2.ListadoAsignaciones.FromString,
                )
        self.agrega_productos = channel.stream_unary(
                '/vendedores.Administracion/agrega_productos',
                request_serializer=administracion__pb2.Producto.SerializeToString,
                response_deserializer=administracion__pb2.Status.FromString,
                )
        self.listado_productos = channel.unary_stream(
                '/vendedores.Administracion/listado_productos',
                request_serializer=administracion__pb2.Empty.SerializeToString,
                response_deserializer=administracion__pb2.Producto.FromString,
                )


class AdministracionServicer(object):
    """Missing associated documentation comment in .proto file."""

    def registrar_vendedor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def registrar_tienda(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def asignar_a_tienda(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listado_tiendas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listado_vendedores(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listado_asignaciones(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def agrega_productos(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listado_productos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdministracionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'registrar_vendedor': grpc.unary_unary_rpc_method_handler(
                    servicer.registrar_vendedor,
                    request_deserializer=administracion__pb2.RegistroVendedor.FromString,
                    response_serializer=administracion__pb2.Status.SerializeToString,
            ),
            'registrar_tienda': grpc.unary_unary_rpc_method_handler(
                    servicer.registrar_tienda,
                    request_deserializer=administracion__pb2.RegistroTienda.FromString,
                    response_serializer=administracion__pb2.Status.SerializeToString,
            ),
            'asignar_a_tienda': grpc.unary_unary_rpc_method_handler(
                    servicer.asignar_a_tienda,
                    request_deserializer=administracion__pb2.RegistroAsignacion.FromString,
                    response_serializer=administracion__pb2.Status.SerializeToString,
            ),
            'listado_tiendas': grpc.unary_stream_rpc_method_handler(
                    servicer.listado_tiendas,
                    request_deserializer=administracion__pb2.Empty.FromString,
                    response_serializer=administracion__pb2.RegistroTienda.SerializeToString,
            ),
            'listado_vendedores': grpc.unary_stream_rpc_method_handler(
                    servicer.listado_vendedores,
                    request_deserializer=administracion__pb2.Empty.FromString,
                    response_serializer=administracion__pb2.RegistroVendedor.SerializeToString,
            ),
            'listado_asignaciones': grpc.unary_unary_rpc_method_handler(
                    servicer.listado_asignaciones,
                    request_deserializer=administracion__pb2.Empty.FromString,
                    response_serializer=administracion__pb2.ListadoAsignaciones.SerializeToString,
            ),
            'agrega_productos': grpc.stream_unary_rpc_method_handler(
                    servicer.agrega_productos,
                    request_deserializer=administracion__pb2.Producto.FromString,
                    response_serializer=administracion__pb2.Status.SerializeToString,
            ),
            'listado_productos': grpc.unary_stream_rpc_method_handler(
                    servicer.listado_productos,
                    request_deserializer=administracion__pb2.Empty.FromString,
                    response_serializer=administracion__pb2.Producto.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vendedores.Administracion', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Administracion(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def registrar_vendedor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vendedores.Administracion/registrar_vendedor',
            administracion__pb2.RegistroVendedor.SerializeToString,
            administracion__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def registrar_tienda(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vendedores.Administracion/registrar_tienda',
            administracion__pb2.RegistroTienda.SerializeToString,
            administracion__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def asignar_a_tienda(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vendedores.Administracion/asignar_a_tienda',
            administracion__pb2.RegistroAsignacion.SerializeToString,
            administracion__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listado_tiendas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/vendedores.Administracion/listado_tiendas',
            administracion__pb2.Empty.SerializeToString,
            administracion__pb2.RegistroTienda.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listado_vendedores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/vendedores.Administracion/listado_vendedores',
            administracion__pb2.Empty.SerializeToString,
            administracion__pb2.RegistroVendedor.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listado_asignaciones(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vendedores.Administracion/listado_asignaciones',
            administracion__pb2.Empty.SerializeToString,
            administracion__pb2.ListadoAsignaciones.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def agrega_productos(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/vendedores.Administracion/agrega_productos',
            administracion__pb2.Producto.SerializeToString,
            administracion__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listado_productos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/vendedores.Administracion/listado_productos',
            administracion__pb2.Empty.SerializeToString,
            administracion__pb2.Producto.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
